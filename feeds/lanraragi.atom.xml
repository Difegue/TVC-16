<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Blogopolis - LANraragi</title><link href="https://tvc-16.science/" rel="alternate"></link><link href="https://tvc-16.science/feeds/lanraragi.atom.xml" rel="self"></link><id>https://tvc-16.science/</id><updated>2023-03-19T00:00:00+01:00</updated><entry><title>LANraragi 0.8.9 ft. Holopin</title><link href="https://tvc-16.science/lrr-holopin.html" rel="alternate"></link><published>2023-03-19T00:00:00+01:00</published><updated>2023-03-19T00:00:00+01:00</updated><author><name>Difegue</name></author><id>tag:tvc-16.science,2023-03-19:/lrr-holopin.html</id><summary type="html">&lt;p&gt;It's just like gacha/steam trading cards, except you don't have to pay money!&lt;/p&gt;</summary><content type="html">&lt;p&gt;LANraragi v.0.8.9 just came out &lt;a href="https://github.com/Difegue/LANraragi/releases/tag/v.0.8.90"&gt;today!&lt;/a&gt;&lt;br&gt;
It's a surprisingly packed release with &lt;strong&gt;10&lt;/strong&gt; different people having worked on it, which is certainly a record as far as any OSS software I made goes.&lt;br&gt;
We finally have ComicInfo.xml support now! Alongside a few other nice improvements to search.  &lt;/p&gt;
&lt;p&gt;It's uncommon for me to get that many PRs... The LRR &lt;a href="https://github.com/Difegue/LANraragi#make-a-pr-get-stickers"&gt;free sticker promo&lt;/a&gt; has been a thing for a long time now, but most contributors don't take advantage of it.&lt;br&gt;
Since my sticker designs are objectively the coolest&lt;sup id="ref-1"&gt;&lt;a href="#note-1"&gt;*&lt;/a&gt;&lt;/sup&gt;, it can only be because people are too kind and don't want me to pay for all that postage! Such acts of kindness go straight to my kokoro...&lt;br&gt;
&lt;img alt="A picture of the &amp;quot;LRR USER&amp;quot; badge on Holopin" src="images/holopin/pin_camel.png"&gt;&lt;br&gt;
But I'd still like to thank/reward contributors if I can help it, so to get rid of any physical-related troubles, we're going full metaverse 'n shit with &lt;a href="https://www.holopin.io/"&gt;Holopin&lt;/a&gt;! Wow! &lt;/p&gt;
&lt;p&gt;You can now get LANraragi stickers in virtual format and stick them on your GitHub profile...or everywhere! I'm just going to paste my badge board &lt;em&gt;here&lt;/em&gt; and you can't stop me from doing it&lt;sup id="ref-2"&gt;&lt;a href="#note-2"&gt;**&lt;/a&gt;&lt;/sup&gt;:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="An image of @difegue's Holopin badges" src="https://holopin.me/difegue" title="An image of @difegue's Holopin badges" /&gt;  &lt;/p&gt;
&lt;p&gt;While I don't actually want to turn my GH profile into social media, I do find the concept of a universal badge board for developers amusing, in the same way game achievements can be.  &lt;/p&gt;
&lt;p&gt;The fact I can use a bunch of previous graphic assets I made and write all sorts of nonsense in the descriptions also helps! My gold standard is TF2 item descriptions.   &lt;br&gt;
&lt;img alt="A picture of the &amp;quot;Burger Time&amp;quot; LRR badge on Holopin - yes this is a yuji naka reference" src="images/holopin/pin_burg.png"&gt;&lt;br&gt;
Stickers and other "swag" incentives ala Hacktoberfest are nice, but don't really feel very fun/indie anymore with all the corporation sponsorships going on in those.&lt;br&gt;
There are currently five LRR-related badges you can get as a Holopin user, either by snooping around a bit or by actively contributing to the LRR repository. I hope you'll consider giving &lt;a href="https://www.holopin.io/@lanraragi"&gt;it a look!&lt;/a&gt;&lt;br&gt;
&lt;img alt="A picture of the &amp;quot;DoujinSoft Truck&amp;quot; badge on Holopin" src="images/holopin/pin_truck.png"&gt;&lt;br&gt;
Now that I'm swimming in PRs thanks to those pngs, I can go back to working on personal &lt;a href="https://github.com/Difegue/LCDonald"&gt;passion projects&lt;/a&gt; that truly speak to my tamashii&lt;sup id="ref-3"&gt;&lt;a href="#note-3"&gt;***&lt;/a&gt;&lt;/sup&gt;:&lt;br&gt;
&lt;img alt="A picture of Sonic McOrigins running on Android/Surface Duo, featuring the elusive...Shadow Basketball" src="images/lcdonald/android.jpg"&gt;&lt;br&gt;
yes ha ha ha &lt;strong&gt;YES&lt;/strong&gt;  &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;&lt;sup id="note-1"&gt;&lt;a href="#ref-1"&gt;*&lt;/a&gt; graphic design is my passion &lt;/sup&gt;&lt;br&gt;
&lt;sup id="note-2"&gt;&lt;a href="#ref-2"&gt;**&lt;/a&gt; Unless you use the internet with third-party JS turned off by default through ublock or some other extension, in which case yknow what? you're alright mate cheers&lt;/sup&gt;&lt;br&gt;
&lt;sup id="note-3"&gt;&lt;a href="#ref-3"&gt;***&lt;/a&gt; (tl note: soul) also android development actually makes me utterly miserable, but the people wanted it.. &lt;/sup&gt;  &lt;/p&gt;</content><category term="LANraragi"></category><category term="lanraragi"></category><category term="holopin"></category><category term="steam trading cards"></category><category term="hell yeah pngs"></category></entry><entry><title>LANraragi User Survey 3 Results</title><link href="https://tvc-16.science/lrr-survey-3-results.html" rel="alternate"></link><published>2021-10-09T00:00:00+02:00</published><updated>2021-10-09T00:00:00+02:00</updated><author><name>Difegue</name></author><id>tag:tvc-16.science,2021-10-09:/lrr-survey-3-results.html</id><summary type="html">&lt;p&gt;Excel kept crashing, making compiling all the data for this extra painful 😭🔫.&lt;/p&gt;</summary><content type="html">&lt;p&gt;LRR &lt;a href="./lrr-survey-3"&gt;Survey 3&lt;/a&gt; results are here! &lt;/p&gt;
&lt;p&gt;I've recently released Version &lt;a href="https://github.com/Difegue/LANraragi/releases/tag/v.0.8.0"&gt;0.8.0&lt;/a&gt; "&lt;em&gt;Black Tie White Noise&lt;/em&gt;", which is mostly a polish release this time instead of a big bowl o' features.   &lt;/p&gt;
&lt;p&gt;This makes for a nice, clean slate, and the 0.9.x development cycle &lt;em&gt;should&lt;/em&gt; therefore mostly be driven by your suggestions -- Downloader support was the last "personal" feature I really wanted in.  &lt;/p&gt;
&lt;p&gt;So let's get to analyzing those results!  &lt;/p&gt;
&lt;h1&gt;Users and platforms&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operating System&lt;/th&gt;
&lt;th&gt;2020 Users&lt;/th&gt;
&lt;th&gt;2021 Users&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linux&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;macOS&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DSM&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unraid&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Doesn't actually use LRR&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Total&lt;/td&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;129&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Lots more replies this year -- I think actually advertising the survey properly yielded some results! 😅  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Install method/location&lt;/th&gt;
&lt;th&gt;2020 Users&lt;/th&gt;
&lt;th&gt;2021 Users&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Windows Installer - Server&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Windows Installer - Local&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Docker - Server&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Docker - Local&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Built it from source - Server&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Built it from source - Local&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Homebrew&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UnRAID Package&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Total&lt;/td&gt;
&lt;td&gt;66&lt;/td&gt;
&lt;td&gt;126&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Nothing too surprising here.&lt;br&gt;
The UnRAID package is technically a glorified Docker container&lt;sup&gt;&lt;sub&gt;(just like the Windows installer lmao)&lt;/sup&gt;&lt;/sub&gt;, but I thought it'd be interesting to count it separately.  &lt;/p&gt;
&lt;p&gt;Last year I was impressed at the Github star count being at 250, but somehow now it's at &lt;a href="https://github.com/Difegue/LANraragi/stargazers"&gt;600+&lt;/a&gt;?? Please stop botting the starcount I can't believe there are that many people &lt;/p&gt;
&lt;h1&gt;Usage and external readers&lt;/h1&gt;
&lt;h2&gt;Favorite features&lt;/h2&gt;
&lt;p&gt;The original question for this was &lt;em&gt;"Which of the following features do you use most/care the most about?"&lt;/em&gt;  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Users&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Batch Tagging&lt;/td&gt;
&lt;td&gt;85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Categories&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;URL Downloading&lt;/td&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Column Customization&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Backup/Restore&lt;/td&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Client API&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Compact/Table View&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Custom Themes&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Some of those are not surprising at all (Batch Tagging is always a hit and I should probably expand it a bit in the future), but I'm glad people enjoy column customization!&lt;br&gt;
Its current implementation in thumbnail view is a bit weird, but it works.  &lt;/p&gt;
&lt;p&gt;I've really enjoyed using URL Downloading (especially since building the Tsukihi Browser Extension), so I'm glad it's been of use to others as well.  &lt;/p&gt;
&lt;h2&gt;Themes&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Theme&lt;/th&gt;
&lt;th&gt;Users&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Default&lt;/td&gt;
&lt;td&gt;83&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sad Panda&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HentaiVerse&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nadeko&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Yotsugi&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Custom&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Total&lt;/td&gt;
&lt;td&gt;126&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;That one kinda came out of left field since I was somehow expecting themes to be used more. (despite never having ran a survey for it 🥲)  &lt;/p&gt;
&lt;p&gt;The current custom-CSS-dropdown system is one of the oldest pieces of code in the app, but it's not very well exposed. (just being a small link at the footer of every page).&lt;br&gt;
I'm likely going to move theme selection into settings and &lt;strong&gt;try&lt;/strong&gt; to expose it better. &lt;sup&gt;And if that doesn't work I'll just gut themes maintaining 5 CSS files is painful&lt;/sup&gt;&lt;/p&gt;
&lt;h2&gt;Third-party clients&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;External Readers used&lt;/th&gt;
&lt;th&gt;2020 Users&lt;/th&gt;
&lt;th&gt;2021 Users&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;No, I only use the Web Reader&lt;/td&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tachiyomi Extension&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ichaival (Android)&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LRReader (Windows)&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Generic OPDS&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuManga (iOS)&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tsukihi (WebExtension)&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It's great to see more people use the third-party clients!&lt;br&gt;
There's a fair amount of work involved in them, and I'd never have thought there'd be a client for every major OS somehow.  &lt;/p&gt;
&lt;p&gt;I also suspect they're used way more than this survey lets on due to, ahem, &lt;em&gt;external services&lt;/em&gt; reimplementing the LRR API to distribute manga without having to expose an HTML front-end.  &lt;/p&gt;
&lt;p&gt;Which I think is awesome! Although said services should probably implement the API properly to avoid a &lt;a href="https://github.com/Guerra24/LRReader/issues/20"&gt;bad user-experience&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;I'm planning to add links to all third-party clients in the main app when I finally get around to implementing a good out-of-box wizard, so hopefully users will notice said clients even more in the future. 🙏  &lt;/p&gt;
&lt;h1&gt;Feature requests and suggestions&lt;/h1&gt;
&lt;h2&gt;The Featurebowl&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Wished by&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Improved Reader Performance&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Improved Search Performance&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Duplicate Detection&lt;/td&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Deeper Category Integration&lt;/td&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Better Out of Box Experience&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Yeah, I pretty much rigged the results by adding those two improved performance choices at the top. 🎰  &lt;/p&gt;
&lt;p&gt;I have some stuff in the works for Reader performance, and Search has been &lt;em&gt;slightly&lt;/em&gt; improved in 0.8, although there's still a bunch of work to be made here.  &lt;/p&gt;
&lt;p&gt;Dupe detection is still a favorite, and I'm sorry for not having worked on it this year 🥲 However LRReader now has a &lt;a href="https://github.com/Guerra24/LRReader"&gt;deduplicator&lt;/a&gt; available, and it works quite well!&lt;br&gt;
A built-in implementation would only be marginally faster, so I'm probably going to redirect people to use LRReader for this for the time being. (And someday I'll sherlock it I guess)&lt;/p&gt;
&lt;p&gt;And uh here's a direct quote from last year:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I still want to do the OoB experience thing at some point, it's logical that existing users wouldn't care too much about it.   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Suggestion Box&lt;/h2&gt;
&lt;p&gt;Here are a few interesting messages/reqs I got from the feature suggestion box.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Situational compression/Compression options like on sadpanda. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This feature isn't advertised too well but does exist -- Check "Resize Images in Reader" under Global Settings.&lt;br&gt;
If you think it's not as powerful/efficient as you'd like, a GH Issue would be most welcome!  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Somekind of way to check whether X gallery on panda is already on the server. Example: You load the page and somewhere in the metadata of the gallery it's writte it's not currently uploaded on the LRR server.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Please check out the &lt;a href="https://github.com/Difegue/Tsukihi"&gt;Tsukihi&lt;/a&gt; Browser Extension for this!  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Also a watched folder that auto-imports.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The content folder normally auto-imports whatever lands in it and that essentially &lt;em&gt;just works&lt;/em&gt; for your case (Linux/Docker user), if it's not importing properly I'd recommend checking if the background worker is running.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Wish there's a way to disable or pause background worker Shinobu, maybe start checking new files manually is better way for my poor hdd, they always been reading and cannot go sleep mode.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are &lt;a href="https://sugoi.gitbook.io/lanraragi/api-documentation/shinobu-api"&gt;API Endpoints&lt;/a&gt; to stop/start Shinobu, but I haven't made them accessible in the main interface since I really don't think users should run with the worker off.&lt;br&gt;
&lt;sup&gt;LRReader does provide the option though if you really want to do it&lt;/sup&gt;&lt;br&gt;
Your HDD woes might've been caused by Redis writing to disk a bit too often since I've made Minion use it as a database instead of SQLite -- I've &lt;a href=""&gt;changed&lt;/a&gt; the Docker/Windows Redis config in 0.8.0 to write to disk much less often, so hopefully this won't be an issue anymore. 👍  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 custom rules to merge and replace redundant tags, select and delete multiple archives at once&lt;br&gt;
👉 A feature to scour the database and replace all tags reading 'x' with a 'y' equiv would be fantastic.&lt;br&gt;
👉 Tag replacement  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://sugoi.gitbook.io/lanraragi/advanced-usage/tag-rules"&gt;Tag Rules&lt;/a&gt;, recently added in 0.8.0, should cover those requests pretty well! There's no support yet for going back and applying them across the entire database, but I'll try adding that in a future release.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Better batch tagging (tag merging/renaming, mostly for dealing with author names) (also a list of all tags would be awesome)&lt;br&gt;
👉 feature to help edit tags of multiple manga/doujin at once&lt;br&gt;
👉 Checkboxes or ability to select mutiple files at once (for batch deletion or adding to categories).&lt;br&gt;
👉 batch tagging in minion, change job delay according to service response (avoid panda bans)   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm considering expanding on batch tagging, so stuff like batch deletion is certainly on the table.&lt;br&gt;
Now that I'm thinking of it, it'd also be a convenient place to integrate tag rules, so you can apply them across multiple files in one click.&lt;/p&gt;
&lt;p&gt;I probably won't move batch tagging to Minion however, since the current implementation using websockets allows one to easily monitor the state of the batch operation from the browser. (At the expanse of having to keep the browser tab open, I know)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Clickable tags in the tag cloud and some way to filter out meta tags like "translated" and "language" from it.&lt;br&gt;
👉 Infinite scrolling for double page mode and a tags index page with counts.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm planning to expand the tag cloud to also include a list of all tags and their count -- The data already exists so it's a waste to not expose it better.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Put reading behind a password please. My instance is publicly accessible under my domain name, but I don't want other people reading it.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Please check the &lt;a href="https://sugoi.gitbook.io/lanraragi/basic-operations/first-steps#security"&gt;Documentation.&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Edit gallery metadata while reading. Also add to certain category while reading. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can already add stuff to a category within the reader, but metadata edition is indeed lacking. I'm not sure how to integrate it properly at the time however. 🤔  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 show archive tags/page overview by default instead of 1st page&lt;br&gt;
👉 I'm the guy who was asking for more of an EH style gallery view during the last survey with the tags on top and thumbnails below without it going directly in to the full image reader view.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This has been asked a few times already so I'm &lt;em&gt;prooobably&lt;/em&gt; going to make it an option, the main blocker with this is that I'll have to add incremental loading of some sort to the gallery overlay so it doesn't fire a billion API calls for each page as it pops up.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Random based on current search&lt;br&gt;
👉 Random button that uses entries from the search query&lt;br&gt;
👉 Random Order for searchs&lt;br&gt;
👉 Random archive adhere the currently chosen categories and filters.&lt;br&gt;
👉 A nice feature to add is random gallery button matching the current search or random gallery inside a category, which open the random gallery in a new tab.&lt;br&gt;
👉 Random archive "list" at home(index) page  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;god okay okay I get it  &lt;/p&gt;
&lt;p&gt;I've been thinking about overhauling the index page for a while now by adding some form of carousel views, similar to what Plex and others do:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Plex Carousel Views" src="https://tvc-16.science/images/plex.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;I'll likely make one of these carousels contain random archives based on the current search filters.&lt;br&gt;
In the future, I might even make the current index view secondary, and have the landing page be a bunch of carousels like Komga does -- We'll see.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 i guess since downloader additions are plugins this is maybe not the best place to ask, but i'd like a pixiv downloader since some artists will re-up their older doujins onto pixiv a while after they go out of print.&lt;br&gt;
👉 We need more download options. Please, add nhentai one.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While the LRR downloader plugin structure allows for basically anything, it gets annoying real fast to write downloaders for websites that don't offer a straight .zip download link.&lt;br&gt;
Go yell at nH to provide real download links for their downsampled content. 🤷‍♂️    &lt;/p&gt;
&lt;p&gt;External tools like &lt;code&gt;gallery-dl&lt;/code&gt; already do the whole scrape-and-download dance, so I don't fancy reinventing the wheel here. 
(Although as always, I'm open to external contributions. 😇)  &lt;/p&gt;
&lt;p&gt;I recall that Pixiv is particularly annoying to maintain a scraper for due to the whole thing constantly changing and requiring a bunch of cookies...  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 backup database currently times out on large libraries (mine is at 8723), and also being able to delete archive without the library view refreshing&lt;br&gt;
👉 Deleting a file without going back to the home (no url change).&lt;br&gt;
👉 Persistent Search in order to make the deletion of unnecessary files easier  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is tracked &lt;a href="https://github.com/Difegue/LANraragi/issues/454"&gt;here&lt;/a&gt;. I'll try prioritizing it since it's not too hard.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 An option to have the "date uploaded" (different from the "date added" that is present already) data visible and ability to sort by it.&lt;br&gt;
👉 Option to make sorting by date_added default&lt;br&gt;
👉 Ability to show the date_added as human readable instead of Unix timestamp&lt;br&gt;
👉 I suggest adding a newest gallery sort and a history section.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm planning to (finally) make &lt;code&gt;date_added&lt;/code&gt; a default feature, but it'll only use the time the file was scanned by the server -- For stuff like last modified time, you'll have to keep relying on the existing plugin.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 fixing ordering issues from the web interface (e.g. cases where the cover is alphabetically not the first image in the zip file)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is actually kinda difficult; I experimented once with using natural sort instead of alphabetical to figure out the cover image, but it introduced more problems than anything.&lt;br&gt;
Maybe a simple "set this image as the cover thumbnail" option in the reader would be enough to catch the few edge cases where the cover isn't the first image. 🤔  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Plugin support for other sites, specially sites that host mostly western content and provide metadata information.&lt;br&gt;
👉 more non-h related features e.g. retrieving artist/genre/etc. from anilist  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I've quickly looked at the comicvine API and might integrate in a plugin further down the line. No real promises for now tho!  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Renaming &amp;amp; sorting the comic files based on scraped info. Sort of similar to how iTunes handles files.&lt;br&gt;
👉 saving metadata inside or alongside the archive  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My policy for user content is to not touch it in any way since that usually annoys people more than anything, but this stuff could be doable through script/tool plugins.&lt;br&gt;
Similarly, saving metadata files next to the zips would break users who set their content folder as read-only.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 nHentai theme&lt;br&gt;
👉 More UI customization  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;How &lt;strong&gt;dare&lt;/strong&gt; you ask for more themes after those survey results.&lt;br&gt;
Utterly unforgivable.&lt;br&gt;
&lt;sup&gt;I don't plan on introducing more themes since 5 is already a lot to maintain&lt;/sup&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Also not essential but would adding a column with the number of pages or file size be possible??&lt;br&gt;
👉 More columns to sort homepage  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Adding columns to the index, while possible, is very painful since DataTables is awful to work with and I hate it, so it's probably not in the cards for the time being.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 fully support wsl2, forwarding ip  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;go &lt;a href="https://github.com/microsoft/WSL/issues/4150#issuecomment-504209723"&gt;yell at microsoft&lt;/a&gt;, bridge mode in wsl2 is...not very convenient we'll say.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Similiar Doujin Recommendation when done with one&lt;br&gt;
👉 Some sort of Similarity search, for example recommendations based on tag similarity for a currently viewed gallery.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is interesting and I wouldn't mind adding it, although I'm not sure how to best calculate tag similarity. (And it'd probably require me to make actual tag indexes in the database but I think I'll have to do that for search speed nonetheless)&lt;br&gt;
I'll make a note of it.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 going back from a reader view the library position should be remembered&lt;br&gt;
👉 A feature to not immediately go back to the first page of the site when leaving the reader. Like maybe go to the page you were on before opening the reader.&lt;br&gt;
👉 more persistence on archive page. For example, if I toggled "new archives only", when I press the "return" button after reading, the filter should still be there.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can technically use your browser history to do that, since search parameters are now saved in the URL.&lt;br&gt;
Past that, I suppose this could be solved by putting your last search in localStorage and serving it back when you open the index again -- Food for thought.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 A better series integration. Having categories for every composite tank is cumbersome. Being able to create a faux archive of galleries to create a searchable meta-tank would be great.&lt;br&gt;
👉 Better implementation for normal manga series that expanding volumes and so on.&lt;br&gt;
👉 bookmark pages, chapter separation (mainly for tankoubon/anthology), better user friendliness for archive status (new/completed etc.)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I've been thinking about adding "Meta-Archives" that batch multiple IDs under one element and are shown as such, but I didn't want to introduce too much complexity and confusion with Categories.&lt;br&gt;
Although I'm seeing komga has both tanks and simili-categories, so it might be fine?  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Of all the more unusual features I may suggest, being able to have a more piecemeal "no fun mode" setting (like being able to hide certain archives in a category or ones that say have a certain tag) would be very useful.&lt;br&gt;
👉 I think you have mentioned that you don't want multiple user accounts. I think if there was a way to just have account roles or tag blacklists is what prevents me from using LANraragi full time, and instead I also run Komga on my unraid, using the docker setup.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While I'm still not too keen on multiple user accounts(mostly because it'd be a fair amount of work and I don't think most users want/need those), I could add whitelisted categories that'd be accessible even with no-fun on. Lemme know if that's something you want!  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👉 Automatic status/tag for Reading, Completed manga/doujin. The ability to filter these (show only unread, reading, etc.). The ability to edit this using right-click on the manga/doujin (right-click on manga -&amp;gt; Mark as Read / Unread).&lt;br&gt;
👉 It's something pretty simple but I'd just like to have a mark as read/unread button, I've still not managed to find that if it exists.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm considering adding inbox/archive functionality ala Hydrus, since I personnally have a few "To Read" categories already and it probably warrants bring more tightly integrated.&lt;br&gt;
Follow &lt;a href="https://github.com/Difegue/LANraragi/issues/480"&gt;this issue&lt;/a&gt; to keep tabs on this!  &lt;/p&gt;
&lt;h1&gt;Closing thoughts&lt;/h1&gt;
&lt;p&gt;There were &lt;strong&gt;way&lt;/strong&gt; more replies this year compared to last time, but I hope I caught most of the major requests here! &lt;br&gt;
I don't work as much on LRR as I did in the past as I'm trying to get other projects off the ground, but for the time being, as long as I'm using it it's certainly not dead. 👏 &lt;/p&gt;
&lt;p&gt;If you want to ask something else or just yell because I &lt;em&gt;totally misinterpreted&lt;/em&gt; what you were saying, there's always the &lt;a href="https://discord.gg/aRQxtbg"&gt;Discord&lt;/a&gt;, &lt;a href="https://github.com/Difegue/LANraragi/discussions"&gt;Github Discussions&lt;/a&gt;, and the comments of this very post.  &lt;/p&gt;
&lt;p&gt;Thanks for reading all the way to the end and supporting the project!&lt;br&gt;
I can't copy all the kind words I got from the survey here lest I bloat the article by another 100 lines, but know that it's all very much appreciated. 🥲  &lt;/p&gt;</content><category term="LANraragi"></category><category term="lanraragi"></category><category term="survey"></category><category term="philosophical software architecture ramblings"></category></entry><entry><title>The 2021 LANraragi User Survey</title><link href="https://tvc-16.science/lrr-survey-3.html" rel="alternate"></link><published>2021-07-07T00:00:00+02:00</published><updated>2021-07-07T00:00:00+02:00</updated><author><name>Difegue</name></author><id>tag:tvc-16.science,2021-07-07:/lrr-survey-3.html</id><summary type="html">&lt;p&gt;The &lt;em&gt;absolute current state&lt;/em&gt; of the Perl5 manga reader device.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="it's actually eternal summer but everyone chooses to forget about it" src="https://tvc-16.science/images/lrr-survey/summer.gif"&gt;&lt;br&gt;
It's summer! That means AC prices shooting up through the roof, major cities being deserted, and the yearly &lt;strong&gt;LRR User Survey&lt;/strong&gt;.&lt;br&gt;
&lt;sub&gt;Pouring one out for my Canada homies currently dying under the heat dome&lt;/sub&gt;  &lt;/p&gt;
&lt;p&gt;The User Survey is a quick means for me to gauge how many users are out there (as the app itself has zero telemetry), and figure out which features are wanted to drive development forward.  &lt;/p&gt;
&lt;p&gt;Here's a quick rundown of everything that landed between the &lt;a href="./lrr-survey-2-results.html"&gt;2020 Survey results&lt;/a&gt; and the latest release, &lt;a href="https://github.com/Difegue/LANraragi/releases/tag/v.0.7.9"&gt;"Lucy Can't Dance"&lt;/a&gt;:&lt;br&gt;
&lt;img alt="wow, cool reader!" src="https://tvc-16.science/images/lrr-survey/survey3-webapp.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fully rewritten Web Reader&lt;/strong&gt;, with new options, tags shown in the page overlay, better keyboard shortcuts and built-in infinite scrolling!  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clickable tags&lt;/strong&gt;, to trigger searches in a much easier fashion.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;URL Downloading support&lt;/strong&gt;, with a matching &lt;a href="https://github.com/Difegue/Tsukihi"&gt;Browser Extension&lt;/a&gt; to queue downloads directly from your Browser.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Column customization&lt;/strong&gt; on a namespace basis in the Index to expose your most important tags directly.&lt;/li&gt;
&lt;li&gt;More &lt;strong&gt;external reader&lt;/strong&gt; work, with a new client for &lt;a href="https://github.com/Doraemoe/DuReader"&gt;iOS&lt;/a&gt;, and LRReader now available in the &lt;a href="https://www.microsoft.com/store/apps/9MZ6BWWVSWJH"&gt;Microsoft Store&lt;/a&gt;.  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server-side progress tracking&lt;/strong&gt;, with an option to come back to client-side tracking for multi-user instances.&lt;/li&gt;
&lt;li&gt;Multiple improvements to Categories, by making them more accessible across the UI.&lt;/li&gt;
&lt;li&gt;Support for AVIF and HEIF, already covered by some external readers as well.&lt;/li&gt;
&lt;li&gt;Being able to &lt;strong&gt;move the Thumbnail Directory&lt;/strong&gt; 🎊🎊🎊&lt;/li&gt;
&lt;li&gt;Offloading of many tasks to a Job Queue using &lt;a href="https://mojolicious.org/perldoc/Minion"&gt;Minion&lt;/a&gt;, to speed up many parts of the server.&lt;/li&gt;
&lt;li&gt;A Shinobu rewrite to avoid murdering hard drives on server restarts 🍩💿&lt;/li&gt;
&lt;li&gt;Basic support for FAKKU metadata.&lt;/li&gt;
&lt;li&gt;A &lt;a href="./lrr-icon-study.html"&gt;logo change&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And even more stuff I can't write about, lest the blogpost triples in size!  &lt;/p&gt;
&lt;p&gt;The downloader stuff took most of the work this year, although it has been infinitely useful to me at the very least, so I'm glad I put the time into it.&lt;br&gt;
I managed to tackle most of the asks from Survey 2 (with the help of a few contributors I am eternally thankful to have), with the exception of &lt;strong&gt;duplicate detection&lt;/strong&gt;.&lt;br&gt;
That just means I get to put it again in the suggestions for this 2021 edition! :^)  &lt;/p&gt;
&lt;h2&gt;&lt;a href="https://forms.office.com/r/8TVSTXKVsm"&gt;You can answer the survey here!&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I've also added some new sticker designs to the &lt;a href="https://ko-fi.com/lanraragi/shop"&gt;LRR Ko-Fi Shop&lt;/a&gt;, if you'd like to sponsor development and get a little bonus out of it!&lt;br&gt;
The V2 logo sticker now has a clear background, so you can stickerbomb your old &lt;em&gt;lame stickers&lt;/em&gt; with the wonderful &lt;code&gt;vapor-retro-neumorphic&lt;/code&gt; shapes of the LANraragi logo.&lt;br&gt;
&lt;img alt="I really like my Perl 5 sticker and dread the day Perl 7 will finally release and make it obsolete" src="https://tvc-16.science/images/lrr-survey/survey3-image.jpg"&gt;&lt;/p&gt;</content><category term="LANraragi"></category><category term="lanraragi"></category><category term="survey"></category><category term="lookback"></category></entry><entry><title>LRR goes neumorphism (well, the icon at least)</title><link href="https://tvc-16.science/lrr-icon-study.html" rel="alternate"></link><published>2021-03-19T00:00:00+01:00</published><updated>2021-03-19T00:00:00+01:00</updated><author><name>Difegue</name></author><id>tag:tvc-16.science,2021-03-19:/lrr-icon-study.html</id><summary type="html">&lt;p&gt;haha gloss and shadows go brrrrrrrrrrrrrr&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="old logo and favicon" src="https://tvc-16.science/images/lrr-nuicon/old.png"&gt;  &lt;/p&gt;
&lt;p&gt;The favicon you've probably already seen a thousand times if you have a &lt;a href="https://github.com/Difegue/LANraragi"&gt;LANraragi&lt;/a&gt; install was ripped off from a Japanese Monogatari website sometime in late 2014. (get it b/c it's araragi and you see the ahoge and everything haha)&lt;br&gt;
The logo came a bit later(late 2016), but it's essentially just an edit of the ubiquitous &lt;a href="https://fontawesome.com/icons/cubes?style=solid"&gt;fa-cubes&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;The favicon served me well enough, but it's starting to feel really low-res, and doesn't really work well on dark backgrounds.&lt;br&gt;
As for the logo, it doesn't look very nice at low resolutions either if I were to make it the new favicon.  &lt;/p&gt;
&lt;p&gt;Therefore, I've been wanting to update the LRR logo in order to make it:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Legible/Recognizable enough at low resolution&lt;/li&gt;
&lt;li&gt;Work on both light and dark backgrounds&lt;/li&gt;
&lt;li&gt;Not a ripoff of existing art (don't want to risk a lawsuit from aniplex and fontawesome if i ever make it big i swear on me mum they'd do it we live in a society)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;while not losing what makes it &lt;strong&gt;unique&lt;/strong&gt;, by which I mean keeping the ahoge motif.  &lt;/p&gt;
&lt;p&gt;&lt;img width="300" alt="can you believe this image is 9 years old already oh my god where does the time go" src="/images/lrr-nuicon/rrg.jpg"/&gt;  &lt;/p&gt;
&lt;h2&gt;Thoughts and process&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.justinmind.com/blog/neumorphism-ui/"&gt;Neumorphism&lt;/a&gt; is the new design meme, but outside of outlandish dribble mockups it seems to just translate to softer shadows and more transparency, with a little bit of 3D thrown in.&lt;br&gt;
&lt;sup&gt;&lt;sub&gt;Not a design expert please don't scream at me for not getting it&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt;
&lt;p&gt;So, let's make a 3D icon! Using the one and only free 3D tool all grand designers use, &lt;s&gt;Blender&lt;/s&gt; Paint 3D by Microsoft:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="it aint stupid if it works" src="https://tvc-16.science/images/lrr-nuicon/p3D.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;I took the existing 3D logo I'd already made for the &lt;a href="./hacktoberfest-lrr-2.html"&gt;5 years hacktoberfest&lt;/a&gt;, and started iterating from there.&lt;/p&gt;
&lt;p&gt;To help with recognizing the icon at low-res, the best thing to do was to bring in some &lt;strong&gt;color&lt;/strong&gt; to the blocks.&lt;br&gt;
The color scheme was inspired by the WinRAR icon, since LRR deals with archive/compressed files basically all the time!  &lt;/p&gt;
&lt;p&gt;&lt;img alt="the finger tool in gimp has been my best ally for over 8 years now and it aint stopping anytime soon" src="https://tvc-16.science/images/lrr-nuicon/study.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Fully coloring them looked kinda garbo, so I went &lt;strong&gt;arthouse&lt;/strong&gt; and just scribbled some lines.&lt;br&gt;
Paint 3D did a surprisingly good job at handling the breadth of the lines depending on the depth, and it reminds me of the NeXTSTEP blocks so I like it:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="damn its like i'm steve jobs" src="https://tvc-16.science/images/lrr-nuicon/OIP.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;I was kinda scared of the 3D ahoge looking like a piece of poop straight outta &lt;a href="https://www.youtube.com/watch?v=Lk2hzFC5Zok"&gt;Duke Nukem Forever&lt;/a&gt; with the glossy lighting and low polycount, but thankfully it looks quite good after some post-processing in &lt;s&gt;Photoshop&lt;/s&gt; GIMP to smooth it out.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="new favicon" src="/images/lrr-nuicon/new.png" width="550"/&gt; &lt;img alt="hmu in the comments if you actually read those alt texts" src="/images/lrr-nuicon/splash.jpg" width="250"/&gt;  &lt;/p&gt;
&lt;p&gt;I really dig the way it's positioned though! It pops out &lt;strong&gt;way&lt;/strong&gt; more than in the previous icon, and having it rotated to the side brings a lot of extra depth.&lt;br&gt;
Having it burrowed a bit more into the blocks also makes it recognizable even at low resolutions. &lt;sup&gt;&lt;sub&gt;and it kinda looks like a parasitic slug so that's cool &lt;/sup&gt;&lt;/sub&gt;  &lt;/p&gt;
&lt;p&gt;The design doesn't fare as well as I'd hoped on dark backgrounds however, so I slapped a squircle straight out of the Apple playbook for the icon variant.&lt;br&gt;
It looks a bit weird on Windows since squircles aren't really a thing in MS iconography, but the Windows app is just a launcher anyways so eh ¯\_(ツ)_/¯  &lt;/p&gt;
&lt;h2&gt;Closing thoughts&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;m8 this icon thing is easy who needs designers rite just slap some 3D blocks and ur good&lt;/em&gt;  &lt;/p&gt;
&lt;p&gt;I wanted to name 0.7.7 Video Crime at first since it's basically the only Tin Machine song I like, but since I pick the Bowie song names proportional to the quality of the release, and 0.7.7 was &lt;strong&gt;super&lt;/strong&gt; huge, I went for Pallas Athena instead.&lt;br&gt;
Probably my favorite song from &lt;em&gt;Black Tie White Noise&lt;/em&gt;, although I love most of the album it's real darn good  &lt;/p&gt;
&lt;p&gt;I took the opportunity to remake my OpenGraph Github splash as well, using Inter as the typography:&lt;br&gt;
&lt;img alt="now in the iOS app store! what have I become good lord forgive me for I have sinned" src="https://tvc-16.science/images/lrr-nuicon/opengraph.jpg"&gt;&lt;br&gt;
I'll kinda miss the low-res GIMP pepper from the previous version.  &lt;/p&gt;</content><category term="LANraragi"></category><category term="lanraragi"></category><category term="icon"></category><category term="design"></category><category term="neumorphism"></category></entry><entry><title>The 2020 LRR Hacktoberfest Bonanza</title><link href="https://tvc-16.science/hacktoberfest-lrr-2.html" rel="alternate"></link><published>2020-10-01T00:00:00+02:00</published><updated>2020-10-01T00:00:00+02:00</updated><author><name>Difegue</name></author><id>tag:tvc-16.science,2020-10-01:/hacktoberfest-lrr-2.html</id><summary type="html">&lt;p&gt;I don't think there's a market for shirts yet but I can make some stickers, sure.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Fiiiiiiiiiiiiiiiiiiiiiiiive Years" src="https://tvc-16.science/images/lrr_5.png"&gt;&lt;br&gt;
It's that time of the year again!  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest 2020&lt;/a&gt; is starting and I am once again aiming to get free shit™ by doing what I already do the entire year: Pushing jank code to GitHub.  &lt;/p&gt;
&lt;p&gt;This year, I'm putting out a hot new &lt;a href="https://github.com/Difegue/LANraragi/releases/tag/v.0.7.3"&gt;LANraragi release&lt;/a&gt; for you to hack on all month. &lt;sub&gt;&lt;sup&gt;(It's got downloaders!)&lt;/sub&gt;&lt;/sup&gt;  &lt;/p&gt;
&lt;h2&gt;Give me them sweet rewards&lt;/h2&gt;
&lt;p&gt;Any PR merged to the LRR repo (or Karen or even &lt;a href="/stylophone"&gt;Stylophone&lt;/a&gt; if you're weird I don't really care) is eligible to receive the now classic LRR sticker set:&lt;/p&gt;
&lt;p&gt;&lt;img alt="rare photography of LRR stickers in their natural habitat" src="https://tvc-16.science/images/stickers_rl.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;And until stocks run out(probably sometime in 2025), I'll also throw in this new cool holographic sticker to celebrate 5 years of LANraragi.&lt;br&gt;
&lt;sub&gt;&lt;sup&gt;The repo started in 2014 so we're already a bit past the 5-year mark I want my time back&lt;/sub&gt;&lt;/sup&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="three trillion hours in paint 3D" src="https://tvc-16.science/images/holofive.png"&gt;  &lt;/p&gt;
&lt;h2&gt;What to do tho&lt;/h2&gt;
&lt;p&gt;Using feedback from the &lt;a href="/lrr-survey-2-results"&gt;last user survey&lt;/a&gt;, I've opened a fair bit of &lt;a href="https://github.com/Difegue/LANraragi/issues?q=is%3Aissue+is%3Aopen+label%3Ahacktoberfest"&gt;Hacktoberfest issues&lt;/a&gt; to give would-be contributors ideas.&lt;br&gt;
Although you can really contribute on anything you want! Even something as simple as documentation improvements would be welcome.  &lt;/p&gt;
&lt;p&gt;Just like last year, the stickers are also available to anyone who pledges $5+ on &lt;a href="https://github.com/users/Difegue/sponsorship"&gt;GitHub Sponsors&lt;/a&gt; or &lt;a href="https://ko-fi.com/lanraragi"&gt;Ko-Fi.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you did one of the above, you can go to the &lt;a href="https://forms.office.com/Pages/ResponsePage.aspx?id=DQSIkWdsW0yxEjajBLZtrQAAAAAAAAAAAAN__osxt25URTdTUTVBVFRCTjlYWFJLMlEzRTJPUEhEVy4u"&gt;following form&lt;/a&gt; to give me a mail address to ship the stuff to.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="I can't believe you're still using a nonfree solution like office forms my dude it's 2020" src="https://tvc-16.science/images/rmshacking.png"&gt;  &lt;/p&gt;</content><category term="LANraragi"></category><category term="hacktoberfest"></category><category term="swag"></category><category term="lanraragi"></category><category term="github sponsors"></category><category term="lods of emone"></category><category term="cheap stickers"></category></entry><entry><title>LANraragi User Survey 2 Results</title><link href="https://tvc-16.science/lrr-survey-2-results.html" rel="alternate"></link><published>2020-07-25T00:00:00+02:00</published><updated>2020-07-25T00:00:00+02:00</updated><author><name>Difegue</name></author><id>tag:tvc-16.science,2020-07-25:/lrr-survey-2-results.html</id><summary type="html">&lt;p&gt;The featurebowl has arrived! Did &lt;strong&gt;your&lt;/strong&gt; suggestion make the cut?&lt;/p&gt;</summary><content type="html">&lt;p&gt;3 months later, it's time to close up &lt;a href="./lrr-survey-2"&gt;Survey 2&lt;/a&gt; and look at the results.&lt;br&gt;
No pie charts this time! Pasting the tables directly from Excel saves me from uploading a bunch of images. 😌😌  &lt;/p&gt;
&lt;h1&gt;Users and platforms&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operating System&lt;/th&gt;
&lt;th&gt;Users&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linux&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;macOS&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BusyBox&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DSM&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unraid&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Doesn't actually use LRR&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Total&lt;/td&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I only got 70 replies to the survey this time, which I'm putting on account of the sadpanda death craze having died down. Way less "I didn't stick with your program because it &lt;strong&gt;sucks&lt;/strong&gt;" replies, after all.&lt;br&gt;
Github ⭐ count flew past 250 as well! I still like watching the counter go up even if it &lt;a href="https://kitze.io/posts/github-stars-wont-pay-your-rent"&gt;doesn't amount to anything.&lt;/a&gt;  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Install method and location&lt;/th&gt;
&lt;th&gt;Users&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Windows Installer - Server&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Windows Installer - Local&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Docker - Server&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Docker - Local&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Built it from source - Server&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Built it from source - Local&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Homebrew - Server&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Homebrew - Local&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Total&lt;/td&gt;
&lt;td&gt;66&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The Windows/Linux users are now basically 50/50, which is unexpected! And validates the hours spent making a proper Windows installer, I guess.&lt;br&gt;
&lt;sub&gt;I don't feel validated for the Homebrew port yet but I'm sure it'll come&lt;/sub&gt;  &lt;/p&gt;
&lt;p&gt;Windows users mostly install on their local machine compared to Linux users jamming the thing into a secondary machine/server, which makes sense I suppose. (&lt;span style="color:green"&gt;&amp;gt;using windows server&lt;/span&gt;)  &lt;/p&gt;
&lt;h1&gt;Usage and external readers&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Preferred view mode&lt;/th&gt;
&lt;th&gt;Users&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Table view&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Thumbnail view&lt;/td&gt;
&lt;td&gt;58&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Total&lt;/td&gt;
&lt;td&gt;66&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Yeah, not surprising. I still love you, table view.  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;External Readers used&lt;/th&gt;
&lt;th&gt;Users&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;No, I only use the Web Reader&lt;/td&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tachiyomi Extension&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ichaival (Android)&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LRReader (Windows)&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OPDS&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The crowd clamoring for external reader support was only a vocal minority after all!&lt;br&gt;
&lt;img alt="i've been bamboozled so freakin hard" src="images/1-2-hurts-just-a-little-bit.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;I'll just have to delude myself into thinking that the OPDS support is actually used.&lt;/p&gt;
&lt;h1&gt;Feature requests&lt;/h1&gt;
&lt;p&gt;ayyy here we go it's the featurebowl  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Users&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Batch Tagging improvements&lt;/td&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Script to attempt better duplicate detection&lt;/td&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Deeper Category integration&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Support for image folders alongside archives&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Browser Extension to directly call the server's Downloaders&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Better Out of Box Experience&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Easier way to contribute to the source code&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I keep underestimating how much people use Batch Tagging considering I personally don't use it at all. 😥 &lt;sub&gt;autoplugin on archive uploads covers my needs i am not a smart man&lt;/sub&gt;&lt;br&gt;
The improvements(default timeout values for plugins, fallback plugins) are quite easy but I'd like to extend the timeout functionality to autoplugin as well.  &lt;/p&gt;
&lt;p&gt;The duplicate script is a fun side-experiment and I wasn't expecting it to overtake the category stuff, so uh I'll do it I guess?  &lt;/p&gt;
&lt;p&gt;The one thing I personally want most is the browser extension as I already use Hydrus Companion a &lt;strong&gt;lot&lt;/strong&gt; for single images, but that relies on downloaders and all the backend work they imply, which will probably take a while. Sorry!  &lt;/p&gt;
&lt;p&gt;I still want to do the OoB experience thing at some point, it's logical that existing users wouldn't care too much about it.&lt;br&gt;
Image folders can die. 🙃  &lt;/p&gt;
&lt;h1&gt;Suggestion Box&lt;/h1&gt;
&lt;p&gt;Here are a few interesting messages I got from the feature suggestion box.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Sort by date added&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Option to customize the columns of the table view.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;sorting on thumbs view. remember sorting. sort by artists than by titles&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Custom sortable columns in table view. Added Date&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is a long-standing issue on adding customizable sorting, but it's true that right now you can't sort at all using only the thumbnail view. I'll keep a note for that!  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Manga bookmarks(i.e volumes with bookmarks for chapters)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This would be nice, but I'm not quite sure how to implement it. Specific tags would work but that's a bit of a slippery slope.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Improved built in front-end user interface&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As soon as AI gets &lt;a href="https://twitter.com/sharifshameem/status/1284095222939451393"&gt;good enough at creating React applications&lt;/a&gt;, I promise I'll use LRR as a testbed for it.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Category view. Category thumbnails are 1st manga thumbnail&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;the ability to link archives in a series together that doesnt require creating a category button on the UI&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Category buttons are a bit unwieldy and I'd like to have a dedicated category view with thumbnails as well.&lt;br&gt;
The Javascript on the Index is a bit spaghettish and I dread having to work on it though 😶  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;EPUB support, images could be generated dynamically. Probably a huge pain to handle all the different EPUB formats though :/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I'm actually adding this in 0.7.1 after looking it up a bit - No text handling tho so support is quite limited unless you use an external client.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;An add/edit/remove tag API on an arcid basis so that external clients can set/unset tags.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's also in 0.7.1!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Mao themes plz&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This one suggestion drives me crazy. Which Mao is this guy talking about? Mao Zedong, or the chairman from Futabu? Did he just heavily typo "More themes"? The possibilities are endless.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Server side read status/progress to sync between devices  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Plugins&amp;amp;scripts that execute On-read/After-reading a manga i.e update extrernal manga trackers when a volume/chapter is read&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Syncing reading progression is a good feature, I left it client-side originally so that it made sense with multiple users on the server, but I think this is a very minor use-case compared to one user accessing his stuff on multiple devices.&lt;br&gt;
Guess I'll do it!  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;An easy way to edit (mainly crop) archive thumbnail, currently i dupe the cover-crop-insert into zip arch usually as file 000 for preservation&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This one is more of a support thing, but I think you'd be better off editing the generated thumbnails directly instead of modifying the archive, since that leads to the ID changing.&lt;br&gt;
Cropping from the server would be possible with magick but that's really way too niche to implement.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;An option for when opening an archive to, instead of opening the last read or first image, to open a page showing all of the archive&amp;#39;s thumbnails allowing you to go directly to a specific image, sort of like EHentai and similar sites.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Integrate the tags and thumbnail view when selecting an archive like eH has it.  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;When selecting an archive, it would be very nice to first be presented with a summery of the tags and the thumbnail images, just like how E-H does it. Would make it much easier to manage and also jump to the page you want with much less clicks.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just hit Ctrl when the reader loads to see all the pages at once.&lt;br&gt;
I'll agree that the reader currently doesn't have metadata shown anywhere, but I don't think that'd be very useful without a way to proc searches by clicking on tags. (See below)  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Middle click on tag :&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Should encode query into the url bar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Those kinda go together in that implementing 2 makes 1 possible.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;An Opening script, or a config file, since remembering the full Docker command to start can be hard sometimes, specially when your machine didn&amp;#39;t save it.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Wait, that's just &lt;a href="https://docs.docker.com/compose/"&gt;docker-compose&lt;/a&gt;! You can also consider using Portainer if you want an easier GUI interface.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Bugfixes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I will try my best. 🙇‍♂️  &lt;/p&gt;
&lt;h1&gt;Finishing up&lt;/h1&gt;
&lt;p&gt;I can't put all the replies up in one article, but all your thank-yous are very much appreciated!&lt;br&gt;
I'm currently working on other things so LRR is a bit on the backburner for the time being, but I'll certainly try to get some dev juice flowing for the next GH Hacktoberfest. (gotta get them stickers fam)  &lt;/p&gt;
&lt;p&gt;Until then, please enjoy the new &lt;a href="https://github.com/Difegue/LANraragi/releases/tag/v.0.7.1"&gt;0.7.1&lt;/a&gt; release.&lt;br&gt;
*mic drop*  &lt;/p&gt;</content><category term="LANraragi"></category><category term="lanraragi"></category><category term="survey"></category><category term="philosophical software architecture ramblings"></category></entry><entry><title>LANraragi User Survey 2 - Electric Boogaloo</title><link href="https://tvc-16.science/lrr-survey-2.html" rel="alternate"></link><published>2020-05-22T00:00:00+02:00</published><updated>2020-05-22T00:00:00+02:00</updated><author><name>Difegue</name></author><id>tag:tvc-16.science,2020-05-22:/lrr-survey-2.html</id><summary type="html">&lt;p&gt;A quick lookback at the progress made since the last survey, and a new one!&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's been less than a year since &lt;a href="https://tvc-16.science/lrr-survey.html"&gt;the last user survey results&lt;/a&gt; for LANraragi -- I went and reread them and it's actually pretty cool to see everything that has been released since.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="hey look pdf support" src="https://tvc-16.science/images/lrr-survey/survey2-image.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Here's a quick rundown of everything that landed between this last post and today's &lt;a href="https://github.com/Difegue/LANraragi/releases/tag/v.0.7.0"&gt;0.7.0 release&lt;/a&gt;:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Categories&lt;/strong&gt;/Archive Sets, so you can finally bundle multiple archives in a named thingamabob, to track series, favorites, etc.  &lt;/li&gt;
&lt;li&gt;The Docker image is now available on &lt;a href="https://hub.docker.com/r/difegue/lanraragi/tags"&gt;a ton&lt;/a&gt; of architectures, including of course ARM. It's smaller too!  &lt;/li&gt;
&lt;li&gt;Reading progress and total page count is now shown on the main page.  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;External reader&lt;/strong&gt; support has &lt;a href="https://sugoi.gitbook.io/lanraragi/advanced-usage/external-readers"&gt;grown consequently&lt;/a&gt;, with dedicated Windows/Android clients, a Tachiyomi extension and support for OPDS readers.  &lt;/li&gt;
&lt;li&gt;Full support for &lt;strong&gt;PDF files&lt;/strong&gt;.  &lt;/li&gt;
&lt;li&gt;Support for webp and more image files, alongside the ability to dynamically resize images output by the server to save on bandwidth.  &lt;/li&gt;
&lt;li&gt;A &lt;a href="https://sugoi.gitbook.io/lanraragi/installing-lanraragi/windows"&gt;true Windows Installer&lt;/a&gt; instead of the ol' PowerShell script.  &lt;/li&gt;
&lt;li&gt;A &lt;a href="https://sugoi.gitbook.io/lanraragi/installing-lanraragi/macos"&gt;Homebrew version&lt;/a&gt; now exists to install the server on macOS and Linux with a simple command.&lt;/li&gt;
&lt;li&gt;High-resolution Thumbnails.  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server-Side&lt;/strong&gt; searching, using the same modifiers as E*H.  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tag suggestions&lt;/strong&gt; when searching.  &lt;/li&gt;
&lt;li&gt;A much beefier Client API (although work on that side never quite ends..)  &lt;/li&gt;
&lt;li&gt;Preview support for directly &lt;strong&gt;downloading&lt;/strong&gt; E*H links to LRR.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And probably even more stuff I've forgotten about. 🎊&lt;br&gt;
I think 0.7.0 is a &lt;em&gt;bretty&lt;/em&gt; good release and hopefully, you'll think the same.  &lt;/p&gt;
&lt;p&gt;The next big ordeal is Downloader support since I finally got tired of downloading my zips manually and dropping them into the Web Uploader, but after that, I might be running out of ideas.  &lt;/p&gt;
&lt;p&gt;There's always work to be done, but now is a good time to refresh the User Survey!&lt;br&gt;
I think the first one yielded some good results, so I'm opening it up once again in order to receive all your hatemail.  &lt;/p&gt;
&lt;h2&gt;&lt;a href="https://forms.office.com/Pages/ResponsePage.aspx?id=DQSIkWdsW0yxEjajBLZtrQAAAAAAAAAAAAN__osxt25URDlOU0JFV0xISENaVjlFTEVOQUlHMDJZWi4u"&gt;Please check it out here.&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Thanks for reading! Be sure to like, subscribe, and &lt;a href="https://ko-fi.com/T6T2UP5N"&gt;give me all your money&lt;/a&gt;.&lt;br&gt;
&lt;sub&gt;&lt;sup&gt;Please don't actually give me all your money&lt;/sub&gt;&lt;/sup&gt;&lt;/p&gt;</content><category term="LANraragi"></category><category term="lanraragi"></category><category term="survey"></category><category term="lookback"></category></entry><entry><title>LANraragi Hacktoberfest Update and GitHub Sponsors</title><link href="https://tvc-16.science/hacktoberfest-lrr.html" rel="alternate"></link><published>2019-10-12T00:00:00+02:00</published><updated>2019-10-12T00:00:00+02:00</updated><author><name>Difegue</name></author><id>tag:tvc-16.science,2019-10-12:/hacktoberfest-lrr.html</id><summary type="html">&lt;p&gt;Begging in style.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Hacktoberfest&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt; is well underway!&lt;br&gt;
I personally got my four PRs in and I suggest looking at &lt;a href="https://hacktoberfestswaglist.com/"&gt;this handy list&lt;/a&gt; to maximize the amount of free shit™ you can get from companies desperate for contributions.  &lt;/p&gt;
&lt;p&gt;It's also about time I made my yearly sticker order for Christmas, so I thought I'd use the opportunity to provide a bonus incentive.&lt;br&gt;
&lt;img alt="three billion hours in inkscape" src="https://tvc-16.science/images/stickers.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;I'll ship out this &lt;code&gt;very cool&lt;/code&gt; sticker set to anyone who makes a (not-crap) PR to &lt;a href="https://github.com/Difegue/LANraragi"&gt;the LRR repo.&lt;/a&gt;&lt;br&gt;
(Hacktoberfest PRs from the start of the month count too so hit me up the two of you who already contributed)  &lt;/p&gt;
&lt;p&gt;I have some issues available under the &lt;a href="https://github.com/Difegue/LANraragi/issues?q=is%3Aissue+is%3Aopen+label%3Ahacktoberfest"&gt;Hacktoberfest&lt;/a&gt; tag for would-be volunteers.&lt;br&gt;
There are quite a few of them that &lt;a href="https://github.com/Difegue/LANraragi/issues/196"&gt;don't require&lt;/a&gt; &lt;a href="https://github.com/Difegue/LANraragi/issues/195"&gt;writing a single line&lt;/a&gt; &lt;a href="https://github.com/Difegue/LANraragi/issues/189"&gt;of server code&lt;/a&gt;, so I better not hear the excuse that Perl is a hindrance this time 'round.  &lt;/p&gt;
&lt;h2&gt;GitHub Sponsors&lt;/h2&gt;
&lt;p&gt;If you're not good at programming but really &lt;strong&gt;really&lt;/strong&gt; want this dumb sticker pack (god bless your twisted soul), I'm also sending one to anyone who pledges $5+ on my newly-minted GitHub Sponsors page &lt;a href="https://github.com/users/Difegue/sponsorship"&gt;here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub matches whatever you put as your pledge, so there's never been a better time to help me get filthy rich through open source.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="BUY IT" src="https://tvc-16.science/images/buyit.png"&gt;  &lt;/p&gt;
&lt;p&gt;(If you don't want to steal Microsoft's money, &lt;a href="https://ko-fi.com/lanraragi"&gt;Ko-Fi&lt;/a&gt; is still available too.)&lt;/p&gt;
&lt;h2&gt;Claiming your stickers&lt;/h2&gt;
&lt;p&gt;If you did one of the above, you can go to the &lt;a href="https://forms.office.com/Pages/ResponsePage.aspx?id=DQSIkWdsW0yxEjajBLZtrQAAAAAAAAAAAAN__osxt25URTdTUTVBVFRCTjlYWFJLMlEzRTJPUEhEVy4u"&gt;following form&lt;/a&gt; to give me a mail address to ship the stuff to.&lt;br&gt;
Happy Hacking!&lt;/p&gt;</content><category term="LANraragi"></category><category term="hacktoberfest"></category><category term="swag"></category><category term="lanraragi"></category><category term="github sponsors"></category><category term="lods of emone"></category><category term="cheap stickers"></category></entry><entry><title>LANraragi User Survey Results</title><link href="https://tvc-16.science/lrr-survey.html" rel="alternate"></link><published>2019-08-02T00:00:00+02:00</published><updated>2019-08-02T00:00:00+02:00</updated><author><name>Difegue</name></author><id>tag:tvc-16.science,2019-08-02:/lrr-survey.html</id><summary type="html">&lt;p&gt;I sure got a spike of new users from the death of Sadpanda.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I opened a small user survey a few months ago to figure out what kind of features LANraragi users would want next.&lt;br&gt;
There's no "&lt;em&gt;telemetry but it's ok because you can turn it off and then everyone turns it off&lt;/em&gt;" in the software, so it was interesting to figure out how many people use my ol' manager and what they get out of it.  &lt;/p&gt;
&lt;p&gt;I planned to release the results alongside 0.6.0 but &lt;a href="./doujinsoft-2.html"&gt;got sidetracked&lt;/a&gt; and other stuff happened and uhhh we've been on beta 2 for like two months 🙃  &lt;/p&gt;
&lt;p&gt;So without further ado, the results! And my &lt;strong&gt;hot takes and opinions&lt;/strong&gt; on some of the most frequent feature requests.  &lt;/p&gt;
&lt;h1&gt;Total users and reasons to not install the software&lt;/h1&gt;
&lt;p&gt;&lt;img alt="users" src="images/lrr-survey/users.png"&gt;&lt;br&gt;
I still thought I was being kinda niche, so it's super unexpected to see the number of concurrent users reach 70+.&lt;br&gt;
Github ⭐ count is at 130-something, which draws me ever closer to 4th place &lt;a href="https://github.com/topics/mojolicious"&gt;in the mojolicious&lt;/a&gt; list for e-bragging rights.  &lt;/p&gt;
&lt;p&gt;Users that tried and didn't stick with LANraragi did so for the reasons I expected:&lt;br&gt;
&lt;code&gt;Ease of installation, and the fact it's not a desktop client.&lt;/code&gt;&lt;br&gt;
The survey was made before I introduced the &lt;a href="./karen-1.html"&gt;new Windows installer&lt;/a&gt;, which I hope alleviates the pain of installing the server for Windows users.  &lt;/p&gt;
&lt;p&gt;As for the Desktop client, I could go the &lt;a href="https://github.com/happypandax/desktop"&gt;HPX route&lt;/a&gt; and cram my front-end in Electron or something, but I hardly see the capital gain from doing that.&lt;br&gt;
In my opinion, a Desktop app should have the matching UX (right-click context menus, higher information density), and add features that aren't possible within a browser's sandbox. (External reader support, for instance.)&lt;br&gt;
&lt;sup&gt;Also the current JavaScript code powering the front-end is a &lt;em&gt;mess&lt;/em&gt; and I'd rather not twist it further to make it fit into a Desktop app 😶 &lt;/sup&gt;  &lt;/p&gt;
&lt;p&gt;I toyed with building a proof-of-concept client on top of the current &lt;a href="https://sugoi.gitbook.io/lanraragi/extending-lanraragi/client-api"&gt;API&lt;/a&gt; using &lt;a href="https://github.com/AvaloniaUI/Avalonia"&gt;Avalonia&lt;/a&gt;, but kinda stopped due to a lack of time. It's certainly possible, though.  &lt;/p&gt;
&lt;p&gt;Among the "other" reasons people had, not being able to easily import metadata from the OG happypanda(not X) came up a few times.&lt;br&gt;
HP's original database is SQLite if I recall, it'd be possible to write a plugin that uses &lt;a href="https://metacpan.org/pod/DBD::SQLite"&gt;a Perl SQLite client&lt;/a&gt; to pull the metadata from it on a file-to-file basis. Not trivial, however. HPX can consume the original HP's database as-is, so it's probably a better fit here.  &lt;/p&gt;
&lt;h1&gt;Platforms&lt;/h1&gt;
&lt;p&gt;&lt;img alt="platforms" src="images/lrr-survey/platforms.png"&gt; &lt;br&gt;
Zero surprise here, the software is built with Linux+Docker in mind. There's been an uptick in Windows+WSL usage with the fall of the panda as well.  &lt;/p&gt;
&lt;p&gt;The "other" platforms are fun stuff like QNAP QTS NASes, ASUSTOR, Ploxmox, etc.&lt;br&gt;
I'd like to apologize to Raspberry Pi users for not providing an ARM container image for the time being.&lt;br&gt;
Hopefully as &lt;a href="https://engineering.docker.com/2019/04/multi-arch-images/"&gt;buildx&lt;/a&gt; becomes a thing, an easy way to build ARM containers on Github Actions will surface.  &lt;/p&gt;
&lt;h1&gt;Storage&lt;/h1&gt;
&lt;p&gt;&lt;img alt="storage" src="images/lrr-survey/storage.png"&gt;   &lt;/p&gt;
&lt;p&gt;I admittedly was expecting more NAS users as that's the primary use case for LRR in my opinion, but that is fine too.&lt;br&gt;
Thumbnail view is near-ubiquituous, so I'll probably make it the default view in a later release.  &lt;/p&gt;
&lt;h1&gt;Feature Requests&lt;/h1&gt;
&lt;p&gt;&lt;img alt="features" src="images/lrr-survey/features.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;oh boy here we go&lt;/em&gt;   &lt;/p&gt;
&lt;p&gt;Categories/Archive Sets is the clear winner here, which is great as I'll be able to ignore cries for image folders for a while longer. ✌&lt;br&gt;
&lt;sup&gt;It's a pain I really don't want to do it reeeeeee &lt;/sup&gt;&lt;br&gt;
This feature is pretty generic and allows people to shape their collection however they want (chapters of a tank, favorites, etc.)&lt;/p&gt;
&lt;p&gt;Regex searching and Tag suggestions are both pretty high up here, and will probably be done when I revamp the current index to use server-side processing instead of loading a big clunky JSON cache. I got a request for adding search to the API too so it all fits!  &lt;/p&gt;
&lt;p&gt;The "Other" category was full of suggestions as expected; I'll be listing the biggest ones below:&lt;/p&gt;
&lt;h3&gt;👉 Mobile Client&lt;/h3&gt;
&lt;p&gt;That's easy, that one &lt;a href="https://github.com/Utazukin/Ichaival"&gt;already exists.&lt;/a&gt; &lt;a href="http://youtube.com/watch?v=39cZap0XcH8"&gt;Next!&lt;/a&gt;  &lt;/p&gt;
&lt;h3&gt;👉 Sorting archives by Date Added&lt;/h3&gt;
&lt;p&gt;This is a feature in Ichaival that isn't actually in the main client.&lt;br&gt;
I plan to modify the current list view to allow customizing the headers based on tag namespaces. So for example, you could replace the "Artist" column by "date_added", and sort that way.&lt;/p&gt;
&lt;h3&gt;👉 Show reading progress and total page count&lt;/h3&gt;
&lt;p&gt;This got a &lt;strong&gt;ton&lt;/strong&gt; of requests! It'll probably show up alongside the New! icon. Not too hard to add.  &lt;/p&gt;
&lt;h3&gt;👉 Add a Favorites system&lt;/h3&gt;
&lt;p&gt;For all the sadpanda expatriates out there. Categories will probably fit that need for most people.  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://sugoi.gitbook.io/lanraragi/advanced-usage/favorite-tags"&gt;Favorite tags&lt;/a&gt; are already a thing and can probably replace Favorites if all you need is a one-click shortcut to your favorite artist or fetish. &lt;/p&gt;
&lt;h3&gt;👉 Add a Ratings system&lt;/h3&gt;
&lt;p&gt;I always felt like rating systems were bloat, so I won't implement this explicitly.&lt;br&gt;
Nothing's stopping you from making a &lt;code&gt;rating:⭐⭐⭐&lt;/code&gt; tag, though. It might even look pretty cool once I implement customizing the list view as explained above.  &lt;/p&gt;
&lt;h3&gt;👉 External viewer support&lt;/h3&gt;
&lt;p&gt;This request comes up every now and then; Sadly I can't do anything about it without a Desktop client first.&lt;br&gt;
HPX offers this option, but it just opens up the viewer program on the server. I still keep to my mantra of LRR being designed for NAS and storage servers first, so I won't implement viewers that way.&lt;/p&gt;
&lt;h3&gt;👉 Downloaders&lt;/h3&gt;
&lt;p&gt;This comes up very often as well! And I don't want to do it! (╯°□°）╯︵ ┻━┻&lt;br&gt;
Trying to have one program do everything by itself gets you something like Hydrus, which is incredibly impressive but also boasts a complex codebase as a result. This makes maintenance exponentially difficult.  &lt;/p&gt;
&lt;p&gt;Adding downloader support is a huge time investment, and would probably yield a result inferior to what dedicated downloader programs can currently do. I'd rather spend time making sure what's already in place is fast and functional.&lt;/p&gt;
&lt;h3&gt;👉 Support for PDF archives&lt;/h3&gt;
&lt;p&gt;This is actually not that hard! If we're considering the PDFs only have images and no text of any kind.&lt;br&gt;
Maybe someday.&lt;/p&gt;
&lt;h3&gt;👉 Duplicate detection&lt;/h3&gt;
&lt;p&gt;Currently, exact duplicate files are detected and marked as such. I don't plan to go further for the time being.&lt;/p&gt;
&lt;h3&gt;👉 Auto-tag support for esoteric filenames from esoteric programs&lt;/h3&gt;
&lt;p&gt;I've had some requests for being able to get metadata from files named &lt;code&gt;[[EBA]_Dutch_Wife_Ooyasan__Landlady_Dutch_Wife_(Action_Pizazz_HB_2013-10)_[English]_TV]&lt;/code&gt;, or archives downloaded using software like https://github.com/RicterZ/nhentai and https://github.com/seven332/EhViewer.&lt;/p&gt;
&lt;p&gt;LRR tries to infer tags from archive filenames when they follow the E-H naming standard.&lt;br&gt;
Past that, support for other naming standards, or metadata embedded in archives falls under the plugin system.  &lt;/p&gt;
&lt;h3&gt;👉 HD Thumbnails&lt;/h3&gt;
&lt;p&gt;This is coming from one of the only macOS users, with their fancy schmanzy retina screens. Makes sense.&lt;br&gt;
Currently thumbnails are indeed a bit too small for hi-res displays. I'm considering just doubling their resolution as-is.&lt;br&gt;
I don't think this will impact storage too much! Otherwise it'd probably have to be a togglable option.&lt;/p&gt;
&lt;h3&gt;👉 Rolling automatic backups&lt;/h3&gt;
&lt;p&gt;I got an issue in about adding an API for making/restoring backups, so I'll probably do that instead so people can automate their own backup strategy.&lt;br&gt;
It does remind me I still haven't implemented log rotation, though.&lt;/p&gt;
&lt;h3&gt;👉 Easier way to update the WSL/Karen installation&lt;/h3&gt;
&lt;p&gt;I initially planned to keep the bootloader/Karen installation static, and allow sideloading new LRR releases as they come(with an update button and everything). That was technically a bit harder so I gave up on it.  &lt;/p&gt;
&lt;p&gt;PowerShell scripts for installing/uninstalling aren't convenient, and ideally I'd like to move to a proper Windows installer package further down the line.&lt;br&gt;
Making .msis is a pain in the ass though, so don't expect that soon. ¯_(ツ)_/¯&lt;/p&gt;
&lt;h3&gt;👉 Miscellaneous reader UX woes&lt;/h3&gt;
&lt;p&gt;Everyone has their own favorite way to read, and as such it's really hard to make a one-size fits all reader.&lt;br&gt;
(Which is why desktop client + external reader would certainly alleviate that pain.)  &lt;/p&gt;
&lt;p&gt;Here are most of the remarks I received. The &lt;a href="https://github.com/Difegue/LANraragi/issues/114"&gt;UX improvements&lt;/a&gt; issue also keeps growing with everyone adding in their own remarks, which makes this all rather hard to track.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Automatic slideshow mode with configurable timer  &lt;/li&gt;
&lt;li&gt;"Long strip" view from Mangadex  &lt;/li&gt;
&lt;li&gt;Random next/previous page  &lt;/li&gt;
&lt;li&gt;Easier way to copy the current image from the reader  &lt;/li&gt;
&lt;li&gt;Display archive tags in reader  &lt;/li&gt;
&lt;li&gt;Proper full-size image link for two-page mode  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'll tackle some of those every now and then, probably.&lt;br&gt;
The reader itself is in pretty good shape as far as JavaScript goes (unlike the archive index), so it's easy to work on.  &lt;/p&gt;
&lt;h3&gt;👉 Provide a better discussion place for support and plugin sharing&lt;/h3&gt;
&lt;p&gt;This is interesting so I'm keeping it for last: It's true that discussion is a bit hard to track in the non-specific management threads.  &lt;/p&gt;
&lt;p&gt;There are a number of options available, like 8chan, gitter, discord(ew), IRC... I'm not sure what would be best so if you have any ideas it'd be cool to drop a comment below.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: I went ahead and wanked out a Discord server you can find &lt;a href="https://discord.gg/aRQxtbg"&gt;here.&lt;/a&gt; Please enjoy!  &lt;/p&gt;</content><category term="LANraragi"></category><category term="lanraragi"></category><category term="survey"></category><category term="rip sadpanda"></category><category term="philosophical software architecture ramblings"></category></entry><entry><title>Masquerading a WSL Distro as a Windows Port, Part 2</title><link href="https://tvc-16.science/wsl-karen-2.html" rel="alternate"></link><published>2019-06-06T00:00:00+02:00</published><updated>2019-06-06T00:00:00+02:00</updated><author><name>Difegue</name></author><id>tag:tvc-16.science,2019-06-06:/wsl-karen-2.html</id><summary type="html">&lt;p&gt;Interacting with WSL from managed code isn't as easy as I'd thought.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://tvc-16.science/wsl-karen-1.html"&gt;Previously,&lt;/a&gt; we got to the point where we had a WSL distro installed seamlessly to the user's computer, alongside all the shortcuts, bells and whistles of a proper Windows application.&lt;br&gt;
Let's talk a bit about the Windows GUI part of the magic trick.  &lt;/p&gt;
&lt;h2&gt;A simple, taskbar-based GUI&lt;/h2&gt;
&lt;p&gt;Since the bulk of the interaction with LANraragi won't be made from this GUI, I wanted to make it as unobtrusive as possible, while still featuring some &lt;a href="https://www.microsoft.com/design/fluent/"&gt;Fluent Design&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;I got some inspiration from Docker for Windows' &lt;a href="https://docs.docker.com/docker-for-windows/images/docker-app-welcome.png"&gt;welcome screen&lt;/a&gt; and the OneDrive app in W10, who both pop-up small windows from their tray icons.&lt;/p&gt;
&lt;p&gt;&lt;img alt="light themin'" src="https://tvc-16.science/images/karen-light.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;I rolled &lt;a href="https://www.nuget.org/packages/Hardcodet.NotifyIcon.Wpf/"&gt;this handy&lt;/a&gt; NuGet package to get the tray icon part out of the way and got to work designin'.  &lt;/p&gt;
&lt;p&gt;Fluent Design would've been almighty easy to pull off had I used &lt;a href="https://docs.microsoft.com/en-us/windows/apps/desktop/modernize/xaml-islands"&gt;XAML Islands&lt;/a&gt;, but I didn't want to be &lt;strong&gt;too&lt;/strong&gt; bleeding edge and restrict the app to 1903 and up purely for cool visual effects. Maybe in a few years. 🏝   &lt;/p&gt;
&lt;p&gt;Instead, I rolled Acrylic the &lt;a href="https://withinrafael.com/2018/02/01/adding-acrylic-blur-to-your-windows-10-apps-redstone-4-desktop-apps/"&gt;DIY way&lt;/a&gt;, and Dark Theme by &lt;a href="https://engy.us/blog/2018/10/20/dark-theme-in-wpf/"&gt;looking up the registry.&lt;/a&gt; The buttons are just some custom XAML &lt;a href="https://github.com/Difegue/Karen/blob/master/Karen/App.xaml#L69"&gt;theming&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;The final result is probably overkill for an interface most people will only look at for 5 seconds, but I couldn't help it. &lt;/p&gt;
&lt;h2&gt;WSL interop from WPF&lt;/h2&gt;
&lt;p&gt;The GUI interops with WSL in four different ways.&lt;br&gt;
I expected to use the &lt;a href="https://docs.microsoft.com/en-us/windows/desktop/api/_wsl/"&gt;WSL API&lt;/a&gt; to do all of these with P/Invokes galore, but encountered a few hitches where I had to run &lt;code&gt;wslconfig.exe&lt;/code&gt; and &lt;code&gt;wsl.exe&lt;/code&gt; instead through NET's Process API.&lt;/p&gt;
&lt;h3&gt;🐧 Check that the Linux Distro is actually installed&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;WslIsDistributionRegistered&lt;/code&gt; flat out &lt;a href="https://stackoverflow.com/questions/55681500/why-did-wslapi-suddenly-stop-working-in-wpf-applications"&gt;doesn't work&lt;/a&gt; in a GUI application for now. I had to make due with running &lt;code&gt;wslconfig.exe /l&lt;/code&gt; and parsing its output to find my distro name.  &lt;/p&gt;
&lt;p&gt;(I initially toyed with the idea of being able to uninstall/install the Distro from the GUI using &lt;code&gt;WslRegisterDistribution&lt;/code&gt;, which would allow for easy updates, but not being able to specify the folder the distro lands in kinda put a stop to that.)&lt;/p&gt;
&lt;h3&gt;🐱‍💻 Execute a Perl one-liner to fetch the LANraragi Version number installed in it&lt;/h3&gt;
&lt;p&gt;Using some &lt;a href="https://mojolicious.org/perldoc/ojo"&gt;ojo&lt;/a&gt; magic ⚡⚡⚡ :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;perl -Mojo -E &lt;span class="s2"&gt;&amp;quot;my &lt;/span&gt;&lt;span class="nv"&gt;$conf&lt;/span&gt;&lt;span class="s2"&gt; = eval(f(qw(/home/koyomi/lanraragi/lrr.conf))-&amp;gt;slurp); say %&lt;/span&gt;&lt;span class="nv"&gt;$conf&lt;/span&gt;&lt;span class="s2"&gt;{version}.q/ - &amp;#39;/.%&lt;/span&gt;&lt;span class="nv"&gt;$conf&lt;/span&gt;&lt;span class="s2"&gt;{version_name}.q/&amp;#39;/ &amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This version is then displayed on the GUI.&lt;br&gt;
I &lt;strong&gt;could've&lt;/strong&gt; used &lt;code&gt;WslLaunch&lt;/code&gt; here to run my one-liner, but the function requires a rather hefty baggage to get started(more on that later). The &lt;code&gt;WslLaunchInteractive&lt;/code&gt; variant just works, but it pops up a console and we don't want any of that.  &lt;/p&gt;
&lt;p&gt;Instead, I simply run my one-liner in &lt;code&gt;wsl.exe&lt;/code&gt; and fetch the text result.&lt;/p&gt;
&lt;h3&gt;📂 Set up a symbolic link to the content folder specified in the GUI&lt;/h3&gt;
&lt;p&gt;When the user gives us his content folder, it's a pure Windows path. &lt;br&gt;
I quickly convert it to its WSL equivalent and setup a symlink to a designated folder in the Linux filesystem:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// Map the user&amp;#39;s content folder to its WSL equivalent&lt;/span&gt;
&lt;span class="c1"&gt;// This means lowercasing the drive letter, removing the : and replacing every \ by a /.&lt;/span&gt;
&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;winPath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Properties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ContentFolder&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;contentFolder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/mnt/&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Char&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToLowerInvariant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;winPath&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;winPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\\&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;🆙 Start and stop the Linux server&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;WslLaunch&lt;/code&gt; is used to start the server. I use the same customized init system as in my Docker images, so all the setup save for the symlinks done above is already there. The function requires opened STDIN/STDOUT/STDERR streams to pipe the process into, so I &lt;a href="https://docs.microsoft.com/en-us/windows/console/allocconsole"&gt;create a hidden console&lt;/a&gt; to magically give my GUI usable console streams.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There's no API function available to terminate/stop a currently running WSL distro. While &lt;code&gt;WslLaunch&lt;/code&gt; gives you the PID of the process you start in WSL, Linux processes aren't hard-tethered to their parents. I always seemed to get a bunch of child processes laying around even after killing said PID, so I added a call to &lt;code&gt;wslconfig.exe /terminate&lt;/code&gt; to the mix. This is the one thing that doesn't work in 1803, since &lt;a href="https://github.com/microsoft/WSL/issues/3253"&gt;/terminate was sneakily added in an Insider build.&lt;/a&gt; ¯_(ツ)_/¯&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using an extra &lt;a href="https://www.nuget.org/packages/HideConsoleOnClose/"&gt;NuGet&lt;/a&gt; package, I got a user-friendly Log Console without even really trying at all. 🥤😎&lt;/p&gt;
&lt;p&gt;&lt;img alt="it's not WSL without a terminal hidden somewhere is it" src="https://tvc-16.science/images/karen-dark.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;This is just the console created from &lt;code&gt;AllocConsole&lt;/code&gt;, shown and hidden when the user clicks the "Log Console" button. The NuGet package adds some extra sorcery to make sure closing the console simply hides it again.&lt;/p&gt;
&lt;h2&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;Packing up an entire WSL distribution seemed way too clumsy to pull off at first, but Microsoft's tooling actually makes disposable distros pretty easy to do! I could almost put this on the store if it wasn't for the fact I'm horribly twisting what WSL was originally made for. &lt;em&gt;Please forgive me Rich Turner for I have sinned&lt;/em&gt;  &lt;/p&gt;
&lt;p&gt;My Docker images are pretty lightweight since I went all in on Alpine a few months back, so the full downloadable Windows package clocks in at &lt;strong&gt;85 MBs&lt;/strong&gt;, with a few more optimizations possible in the future.&lt;br&gt;
That's less than your average Electron application. 😏  &lt;/p&gt;
&lt;p&gt;You can check the full source code for this crazy thing &lt;a href="https://github.com/Difegue/Karen"&gt;here.&lt;/a&gt; Thanks for reading!&lt;/p&gt;</content><category term="LANraragi"></category><category term="wsl"></category><category term="wpf"></category><category term="c#"></category></entry><entry><title>Masquerading a WSL Distro as a Windows Port, Part 1</title><link href="https://tvc-16.science/wsl-karen-1.html" rel="alternate"></link><published>2019-06-05T00:00:00+02:00</published><updated>2019-06-05T00:00:00+02:00</updated><author><name>Difegue</name></author><id>tag:tvc-16.science,2019-06-05:/wsl-karen-1.html</id><summary type="html">&lt;p&gt;That's cheating! But is it really seamless?&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the major complaints I often get with &lt;a href="https://github.com/Difegue/LANraragi"&gt;LANraragi&lt;/a&gt; is that it's a major pain to install. And I tend to agree!&lt;br&gt;
The software runs as a web server through &lt;a href="http://mojolicious.org"&gt;Mojolicious&lt;/a&gt;, paired with a Redis database.  &lt;/p&gt;
&lt;p&gt;Thanks to the power of Docker images, I've made it much easier for Linux users, but Windows users were still stuck dealing with Virtual Machines or the handy-but-not-really-stable &lt;a href="https://docs.docker.com/docker-for-windows/"&gt;Docker for Windows.&lt;/a&gt; (Which is pretty much a VM too, all things considered.)  &lt;/p&gt;
&lt;p&gt;I got requests for a good Windows version often enough that at one brief point I hacked up a full source port of the app:&lt;br&gt;
&lt;img alt="peak 2016 here lads" src="https://tvc-16.science/images/quickstarter.jpg"&gt;&lt;br&gt;
It relied on a Redis port &lt;a href="https://github.com/microsoftarchive/redis"&gt;made and subsequently abandoned by Microsoft&lt;/a&gt;, and a &lt;strong&gt;lot&lt;/strong&gt; of batch file glue.&lt;br&gt;
Lovely, but hey it worked! Until some dude strolled along with his Shift-JIS encoded Windows OS and subsequently broke the entire archive detection code.&lt;br&gt;
&lt;img alt="i fucking hate codepages" src="https://tvc-16.science/images/coolmeme.jpg"&gt;&lt;br&gt;
Then Mojolicious itself dropped Windows support, things happened, and I pretty much had to kill the thing because it wasn't even standing on its own anymore.  &lt;/p&gt;
&lt;p&gt;Meanwhile, &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/about"&gt;WSL&lt;/a&gt; was making headlines. I've been using it for a while already to do dev work on LANraragi and it's solid. I read &lt;a href="https://medium.com/@hoxunn/wsl-docker-custom-distro-2-0-730fd97fe72e"&gt;this blogpost&lt;/a&gt; recently, which put a crazy and certainly unintended spin on the concept in my head:  &lt;/p&gt;
&lt;h2&gt;Why not just ship WSL as a Windows port?&lt;/h2&gt;
&lt;p&gt;Generating lightweight WSL distros out of Docker images seemed easy with my current workflow, and past that it'd just be a matter of providing users an easy, Windows-like interface to the server stowed away in the distro.  &lt;/p&gt;
&lt;p&gt;I'd basically have three big parts to work on for this:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;👉 &lt;strong&gt;Build&lt;/strong&gt; a WSL distro (basically just a Linux rootfs) out of my existing Docker image  &lt;/li&gt;
&lt;li&gt;👉 &lt;strong&gt;Register&lt;/strong&gt; said distro on the user's computer through the WSL API, and install a basic GUI tool  &lt;/li&gt;
&lt;li&gt;👉 Use the GUI tool to &lt;strong&gt;interop&lt;/strong&gt; with the distro, mapping Windows directories and settings to the Linux world and starting the webserver  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'll spoil you the results by saying it &lt;em&gt;totally heckin' works&lt;/em&gt; and is currently out in beta:&lt;br&gt;
&lt;img alt="bazinger z" src="https://tvc-16.science/images/karen.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;One codebase, putting out Docker images used by both Linux and Windows users in "slightly" different ways.&lt;br&gt;
I'll dedicate the rest of this blogpost - and its followup - to depicting the major hiccups I encountered building this thing out.&lt;/p&gt;
&lt;h1&gt;Building the WSL distro in Github Actions&lt;/h1&gt;
&lt;p&gt;I do all the continuous integration for LANraragi in &lt;a href="https://github.com/features/actions"&gt;Github Actions&lt;/a&gt; these days, so it seemed an easy choice to add the WSL distro build to it.&lt;br&gt;
According to Nunix's blogpost, it's really just a matter of running &lt;a href="https://docs.docker.com/engine/reference/commandline/export/"&gt;&lt;code&gt;docker export&lt;/code&gt;&lt;/a&gt; on the images I'm already building.&lt;br&gt;
Said command gives out a .tar containing the full Linux filesystem, for readymade import into WSL. Should be easy, righ-&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Error response from daemon: This Docker operation is forbidden by GitHub Actions,&lt;/span&gt;
&lt;span class="err"&gt;you can find documentation at https://developer.github.com/actions/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There's actually no warning about this anywhere in the Actions documentation, but since Actions run in premade Docker environments, a few Docker commands are &lt;a href="https://github.com/actions/docker/issues/7#issuecomment-459808907"&gt;locked out&lt;/a&gt; to prevent potential sandbox escapes.  &lt;/p&gt;
&lt;p&gt;And of course, the all-essential &lt;code&gt;export&lt;/code&gt; is part of those. I had to switch to using &lt;a href="https://docs.docker.com/engine/reference/commandline/save/"&gt;&lt;code&gt;docker save&lt;/code&gt;&lt;/a&gt;, which also exports your image as a .tar archive, but &lt;strong&gt;not&lt;/strong&gt; as a ready-to-use filesystem.&lt;br&gt;
Instead, it exports each layer of the Docker image as a separate .tar, then bundles up all of those.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="bazinger z" src="https://tvc-16.science/images/export_vs_save.png"&gt;&lt;br&gt;
This is convenient for reimporting into Docker itself, but not at all for what I want here.  &lt;/p&gt;
&lt;p&gt;The hackjob solution I ended up using was to manually squash all the layers post-save:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Export&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="k"&gt;extract&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;resulting&lt;/span&gt; &lt;span class="n"&gt;tarball&lt;/span&gt;
&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;save&lt;/span&gt; &lt;span class="c1"&gt;--output save.tar difegue/lanraragi&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xf&lt;/span&gt; &lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="c1"&gt;--wildcards &amp;quot;*.tar&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;squashed&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Find&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;them&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;same&lt;/span&gt; &lt;span class="n"&gt;squashed&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;repack&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;
&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mindepth&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iname&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;*.tar&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;print0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;exec&lt;/span&gt; &lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xf&lt;/span&gt; &lt;span class="err"&gt;{}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;C&lt;/span&gt; &lt;span class="n"&gt;squashed&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;squashed&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;%P\n&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cf&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="c1"&gt;--no-recursion -C squashed -T -&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Well, got my distro. What now?&lt;/p&gt;
&lt;h1&gt;Installing a WSL distro seamlessly to the enduser's machine&lt;/h1&gt;
&lt;p&gt;Unlike with my previous foray, I didn't(couldn't) bother supporting Windows 7 or 8 here.&lt;br&gt;
It's straight bleedin' edge Windows 10, which means &lt;strong&gt;PowerShell&lt;/strong&gt; is free game instead of wrangling old .bat scripts.  &lt;/p&gt;
&lt;p&gt;You can check the full source for the install/uninstall scripts &lt;a href="https://github.com/Difegue/Karen/blob/master/Karen/Karen-Installer.ps1"&gt;here&lt;/a&gt;  and &lt;a href="https://github.com/Difegue/Karen/blob/master/Karen/Karen-Uninstaller.ps1"&gt;here.&lt;/a&gt;&lt;br&gt;
I haven't bothered wrapping those in proper executable installers yet: Writing .MSIs is a pain!&lt;br&gt;
(I don't envy macOS devs often, but I sure could use something like &lt;a href="https://sveinbjorn.org/platypus"&gt;Platypus&lt;/a&gt; to quickly wrap scripts in nice-looking executables.)&lt;/p&gt;
&lt;p&gt;I initially wrote the scripts fully using &lt;code&gt;wsl.exe&lt;/code&gt; to unregister/register/terminate the LANraragi distro, but quickly realized that as nice as &lt;code&gt;wsl.exe&lt;/code&gt; was, it's completely useless in Windows 10 versions under 1903, the April 2019 Update.&lt;br&gt;
Here's a quick breakdown of available WSL command tools in Win10 and their featureset alongside versions.  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Win10 version/Tool&lt;/th&gt;
&lt;th&gt;wsl.exe&lt;/th&gt;
&lt;th&gt;wslconfig.exe&lt;/th&gt;
&lt;th&gt;wslapi.h (direct API call)&lt;/th&gt;
&lt;th&gt;lxrun&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1709 (Fall CU)&lt;/td&gt;
&lt;td&gt;Execute commands in a distro&lt;/td&gt;
&lt;td&gt;List distros, unregister, set as default&lt;/td&gt;
&lt;td&gt;List, register/unregister, execute commands&lt;/td&gt;
&lt;td&gt;(Ubuntu only) Install/Uninstall, Update&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1803 (RS4)&lt;/td&gt;
&lt;td&gt;Nothing new&lt;/td&gt;
&lt;td&gt;Nothing new&lt;/td&gt;
&lt;td&gt;Nothing new&lt;/td&gt;
&lt;td&gt;Dead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1809 (RS5)&lt;/td&gt;
&lt;td&gt;Nothing new&lt;/td&gt;
&lt;td&gt;Terminate a running distro&lt;/td&gt;
&lt;td&gt;Nothing new&lt;/td&gt;
&lt;td&gt;Dead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1903 (You are here)&lt;/td&gt;
&lt;td&gt;List distros, register/unregister, terminate, set as default&lt;/td&gt;
&lt;td&gt;Nothing new&lt;/td&gt;
&lt;td&gt;Nothing new&lt;/td&gt;
&lt;td&gt;Dead&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;"Registering" a distro in WSL terms means basically unpacking the Linux filesystem somewhere and registering the resulting folder as containing a Linux distribution.  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;wslconfig.exe&lt;/code&gt; is a more capable alternative for older Windows versions, but it doesn't allow registering a distro.&lt;br&gt;
As for direct API calls, the &lt;a href="https://docs.microsoft.com/en-us/windows/desktop/api/wslapi/nf-wslapi-wslregisterdistribution"&gt;registration function&lt;/a&gt; doesn't allow you to pick a folder to unpack the distro to.  &lt;/p&gt;
&lt;p&gt;Since I wanted to target at least 1803, the latest LTSC release, I ended up bundling &lt;a href="https://github.com/DDoSolitary/LxRunOffline"&gt;LxRunOffline&lt;/a&gt; alongside the installer to perform the distro registration easily. It also features a nice progress bar &lt;code&gt;wsl.exe&lt;/code&gt; doesn't have, so at least it looks good. 👀  &lt;/p&gt;
&lt;p&gt;&lt;img alt="lookin cool unspecified open source software to use on wsl" src="https://tvc-16.science/images/ps.png"&gt;  &lt;/p&gt;
&lt;p&gt;Past this, I'm basically just doing usual Installer-y things: Copying the GUI executable to a designated folder in AppData, adding a Start Menu shortcut, checking WSL is installed and that we're on a 64-bit OS, the works.&lt;/p&gt;
&lt;p&gt;More on the GUI tool itself in the &lt;a href="https://tvc-16.science/wsl-karen-2.html"&gt;next blog post!&lt;/a&gt;&lt;/p&gt;</content><category term="LANraragi"></category><category term="wsl"></category><category term="github actions"></category></entry></feed>